[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "comma-cli"
dynamic = ["version"]
description = "Multi-Tool"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Flavio Amurrio", email = "25621374+FlavioAmurrioCS@users.noreply.github.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "persistent-cache-decorator",
  "pyfunctional",
  "requests",
  "rich",
  "runtool",
  "typedfzf",
  "typer",
  "typing-extensions",
]

[project.optional-dependencies]
personal = [
  "fastapi",
  "polyfactory",
  "pydantic",
  "selenium",
  "twilio",
  "uvicorn[standard]",
]

[project.scripts]
- = "comma.main:app_main"
-c = "comma.misc.code:app_c"
-devcon = "comma.devcon:app_devcon"
-docker = "comma.docker:app_docker"
-lt = "comma.logtool:app_logtool"
-mux = "comma.misc.tmux:app_mux"
-runFunc = "comma.typer.reflection:run_func"
-sh = "comma.shell_scripts.shell_utils:app_sh"
-sh-script = "comma.shell_scripts.shell_scripts:app_shell_scripts"
-showFunc = "comma.typer.reflection:show_func"
dev = "comma.main:app_main"

[project.urls]
Documentation = "https://github.com/FlavioAmurrioCS/comma-cli#readme"
Issues = "https://github.com/FlavioAmurrioCS/comma-cli/issues"
Source = "https://github.com/FlavioAmurrioCS/comma-cli"

[tool.hatch.version]
path = "src/comma/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
  "coverage xml",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/comma src/gron src/gum tests}"

[tool.coverage.run]
source_pkgs = ["comma", "gron", "gum"]
branch = true
parallel = true
omit = [
  "src/comma/__about__.py",
]

[tool.coverage.paths]
comma = [
  "src/comma",
  "*/comma-cli/src/comma",
  "src/gron",
  "*/comma-cli/src/gron",
  "src/gum",
  "*/comma-cli/src/gum",
]
tests = ["tests", "*/comma-cli/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.hatch.build.targets.wheel]
packages = [
  "src/comma",
  "src/gron",
  "src/gum",
]

# COMMMON SETTINGS BELOW
[tool.hatch.envs.hatch-static-analysis]
config-path = "none"

[tool.pyright]
venvPath = "."
venv = "venv"

[tool.ruff]
line-length = 100
select = [
  "ALL",
]

ignore = [
  "D",   # pydocstyle # TOO MANY FIXES
  "PGH", # pygrep-hooks # TOO MANY FIXES
  "FIX", # flake8-fixme
  "TD",  # flake8-todos

  "B008",
  "ANN101",
  "ANN102",
  "ANN401",
  "ERA001", # Keep uncommented code
  "E501",

  # DO NOT ENABLE THE FOLLOWING
  "T20",    # flake8-print # DO NOT ENABLE, we use prints
  "PTH",    # flake8-use-pathlib # DO NOT ENABLE, we prefere non pathlib
  "I",      # isort # DO NOT ENABLE
  "COM812",
  "ISC001",
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80

[tool.ruff.lint.pydocstyle]
convention = "google"

# https://github.com/astral-sh/ruff/issues/4368
[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
  "S101",
  "D101",
  "D102",
  "E501",
  "S603",
  "INP001",
]
"**/_personal/**/*.py" = [
  "ALL",
]

[tool.tox]
legacy_tox_ini = """
    [tox]
    skip_missing_interpreters = True
    envlist = py38, py39, py310, py311, py312

    [testenv]
    deps = pytest
    commands =
        ; mypy --ignore-missing-imports --scripts-are-modules comma
        pytest -W ignore::DeprecationWarning -W ignore::PendingDeprecationWarning {posargs:tests}
"""
